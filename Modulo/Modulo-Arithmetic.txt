modulo-arithmetic:
(a+b) % n = ((a % n) + (b % n)) % n
(a*b) % n = ((a % n)*(b % n)) % n


Euclidian algorithm to calculate GCD of A and B
gcd(A, B) = {A (B = 0), gcd(B, A % B) otherwise}

modulo-congruency:
a and b are said to be congruent under a modulo n if:

a % n = b % n

eg. 13 and 41 (by 7)

use case:

(13+35+5) % 7 = (41+35+7) % 7 = 4

this is true in all cases, even when multiplication is performed instead of addition


multiplication under modulo:
if a*b = c, then
a (mod N) * b (mod N) is congruent with c under modulo N


exponentiation in modulo-arithmetic:

if a is congruent with b under mod N, then a^k is congruent with b^k under mod N

eg. find 29^10 (mod 3)

29 mod 3 = 2
answer: (2^10) % 3 = 1024 % 3 = (7 % 3) = 1


modulo inverse:

if X is the modulo inverse of B under modulo P (means that B*X is congruent with 1 % P), then
(A/B) % P = (A * X) % P = ((A % P) * (X % P)) % P = 1

Modulo inverse of N under P exists iff gcd(N, P) = 1, i.e, when N and P are co-prime